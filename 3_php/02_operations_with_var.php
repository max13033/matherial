<?
void unset(mixed $va.r [, mixed $va.rl . .. ])
// В круглых скобках конструкции unset () указывается либо одна, либо несколько
// разделенных за11ятыми переменных, которые подлежат уничтожению.

// Для проверки существования переменной используется конструкция is.set (), которая
// имеет следующий синтаксис :
Ьооl isset (mixed $var [ , mixed $ . . . ] )
// В круглых скобках конструкции isset () указывается либо одна, либо несколько
// разделенных запятыми переменных. В отличие от конструкции unset ( ), здесь возвращается
// значение логического типа.

<?php
//  Объявляем пус тую переменную
$str = '';
if(isset($str)) { // true
    echo 'Переменная $str существует < Ьr /> ';
}
//   Помечаем переменную $str как неиници а лизированную
$str = null;
if (isset ($str) ) {  // false
    echo 'Переменная $st r существует <Ьr /> ';
}
//   Инициализируем переменные $а и $Ь
$а ' variaЬle';
$Ь = 'another variaЬle ' ;

//   Проверяем существование переменных
if(isset($a)) { // true
    echo 'Переменная $а существует<Ьr />';
}
if (isset ($а, $Ь)) { // true
echo 'Переменные $а и $Ь существуют<Ьr />';

// Уничтожаем переменную $а
unset ($а);
//   Проверяем существование переменных
if (isset ($а)) { // false
    echo 'Переменная $а существует<Ьr />';
}    
if (isset ($а, $Ь)) { // false
    echo 'Переменные $а и $Ь существуют<Ьr />';
}
    // Как видно, пустая строка не эквивалентна неинициализированной
    // переменной (т. е. переменной, принимающей значение null). Для проверки, является
    // ли строка пустой или нет, предназначена специальная конструкция ernpty (),
    // которая имеет следующий синтаксис :
Ьооl empty (mixed $var)
    // В отличие от конструкции isset(), конструкция ernpty () принимает в качестве параметра
    // лишь одну переменную $var и возвращает true, если переменная равна
    // пустой строке"", нулю О, символу нуля в строке "О", null, false, пустому массиву
    // array (), неинициализированной переменной (случай, впрочем, аналогичный null).
    // Во всех остальных случаях возвращается false.

//  Функция gettype() возвращает тип переменной $var. Возвращаемое значение может принимать
//  одно из значений: "boolean", "integer'', "douЫe" (и для douЫe, и для float),
//  "string", "array", "object", "resource", "nн ll" и "unknown type" (листинг 4.21).

//   Объявляем целую переменную
$nwnЬer = 123;
echo gettype($nwnЬer); // integer

//  Объявляем логическую переменную
$flag = true;
echo gettype($flag); // boolean

//   Объявляем строковую переменную
$str = '';
echo gettype($str); // string

//   Объявляем вещественную переменную
$var = 1. 7;
echo gettype($var); // douЬle

//  Уничтожаем переменную $var
unset($var ) ;
echo gettype($var); // null


$apple = "Яблоко";

echo '$apple';     //  Выведет    $apple

echo "$apple";      //   Выведет   Яблоко

$x = 10;
$y = 20;

echo '$x + $y';     //  Выведет   $x + $y 

echo "$x + $y";     //  выведет   10 + 20

echo $x + $y;       //   Выведет  30

echo "У меня есть $apple" ;   //        У меня есть Яблоко

echo 'Переменная $apple равна '.$apple;     //   Конкатенация строк, выведет   Переменная $apple равна Яблоко


// присвоение значения другой переменной
$a = 5;
$b = $a;
echo $b // 5
$b = 7;
echo $a; // 5   мы изминили $b, но значение $a осталось прежним.

// присвоение по ссылке
$a = 5;
$b = &$a;  // 5
$b = 7;
echo $a;  // 7 мы присвоили $b ссылку на $a, поэтому после изменения $b поменялся и $a;



//  Динамические пременные 

$id_menu = 3;
$str = "active$id_menu"; // "active3"
$$str = 1;

if(isset($active3)) {
    // $active3 = 1;
    echo "Переменная \${$str} существует и равна $active3";
}
?>