<!DOCTYPE HTML>
<html>

<head>
<title>Заголовок страницы</title>
<meta http-equiv="Content-type" content="text/html; charset=utf-8" />
<link rel="stylesheet" type="text/css" href="http://localhost/test.ru/css/style.css">
</head>

<body>
<style type="text/css">


</style>
<script type="text/javascript">

// Одна из наиболее общих характеристик традиционных объектно-ориентирован
// ных языков программирования, таких как C++, заключается в возможности
// объявления частных (private) свойств класса, обращаться к которым можно
// только из методов этого класса и недоступных за пределами класса. Распростра
// ненная техника программирования, называемая инкапсуляцией данных, заклю
// чается в создании частных свойств и организации доступа к этим свойствам толь
// ко через специальные методы чтения/записи.

// Следующий фрагмент демонстрирует, как можно добиться этого. Он содержит
// реализацию объекта прямоугольника Rectangle, ширина и высота которого дос
// тупны и могут изменяться только путем обращения к специальным методам:

function ImmutableRectangle(w, h) {
// Этот конструктор не создает свойства объекта, где может храниться
// ширина и высота. Он просто определяет в объекте методы доступа
// Эти методы являются замыканиями и хранят значения ширины и высоты
// в своих цепочках областей видимости.
this.getWidth = function() { return w; }
this.getHeight = function() { return h; }
}
// Обратите внимание: класс может иметь обычные методы в объектепрототипе.
ImmutableRectangle.prototype.area = function( ) {
return this.getWidth( ) * this.getHeight( );
};

</script>









</body>
</html>

